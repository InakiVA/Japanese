# -*- coding: utf-8 -*-
"""Jap3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Q1jEwlW9TojDTDuqmhaUTOVuv5AG1CBk
"""

from google.colab import drive #conectar drive a colab
drive.mount('/content/gdrive')

import pandas as pd #sacar archivo de jap
import random 
V=pd.read_excel('/content/gdrive/MyDrive/ListaVKJap.xlsx', index_col=False, sheet_name=0)
VC=pd.read_excel('/content/gdrive/MyDrive/ListaVKJap.xlsx', index_col=False, sheet_name=1)
K=pd.read_excel('/content/gdrive/MyDrive/ListaVKJap.xlsx', index_col=False, sheet_name=2)
KC=pd.read_excel('/content/gdrive/MyDrive/ListaVKJap.xlsx', index_col=False, sheet_name=3)
P=pd.read_excel('/content/gdrive/MyDrive/ListaVKJap.xlsx', index_col=False, sheet_name=4)

def lim2(m):
  l=[]
  a=1
  i=0
  while a!=0:
    if m[i]=="fin de lista":
      break
    else:
      l.append(m[i])
      i+=1      
  return l

#designar valores de vocabulario de cada lección
l1e=lim2(V.loc[:,'Voc 1 Esp'])
l1j=lim2(V.loc[:,'Voc 1 Jap'])
l2e=lim2(V.loc[:,'Voc 2 Esp'])
l2j=lim2(V.loc[:,'Voc 2 Jap'])
l3e=lim2(V.loc[:,'Voc 3 Esp'])
l3j=lim2(V.loc[:,'Voc 3 Jap'])
l4e=lim2(V.loc[:,'Voc 4 Esp'])
l4j=lim2(V.loc[:,'Voc 4 Jap'])
l5e=lim2(V.loc[:,'Voc 5 Esp'])
l5j=lim2(V.loc[:,'Voc 5 Jap'])
l6e=lim2(V.loc[:,'Voc 6 Esp'])
l6j=lim2(V.loc[:,'Voc 6 Jap'])
l7e=lim2(V.loc[:,'Voc 7 Esp'])
l7j=lim2(V.loc[:,'Voc 7 Jap'])
l8e=lim2(V.loc[:,'Voc 8 Esp'])
l8j=lim2(V.loc[:,'Voc 8 Jap'])
l9e=lim2(V.loc[:,'Voc 9 Esp'])
l9j=lim2(V.loc[:,'Voc 9 Jap'])
l10e=lim2(V.loc[:,'10 Voc Esp'])
l10j=lim2(V.loc[:,'10 Voc Jap'])
l11e=lim2(V.loc[:,'11 Voc Esp'])
l11j=lim2(V.loc[:,'11 Voc Jap'])
l12e=lim2(V.loc[:,'12 Voc Esp'])
l12j=lim2(V.loc[:,'12 Voc Jap'])
l13e=lim2(V.loc[:,'13 Voc Esp'])
l13j=lim2(V.loc[:,'13 Voc Jap'])
l14e=lim2(V.loc[:,'14 Voc Esp'])
l14j=lim2(V.loc[:,'14 Voc Jap'])
#l15e=lim2(V.loc[:,'15 Voc Esp'])
#l15j=lim2(V.loc[:,'15 Voc Jap'])

vsustantivose=lim2(VC.loc[:,'Sustantivos Esp'])
vsustantivosj=lim2(VC.loc[:,'Sustantivos Jap'])
vverbose=lim2(VC.loc[:,'Verbos Esp'])
vverbosj=lim2(VC.loc[:,'Verbos Jap'])
vadjetivose=lim2(VC.loc[:,'Adjetivos Esp'])
vadjetivosj=lim2(VC.loc[:,'Adjetivos Jap'])
vobjetose=lim2(VC.loc[:,'Objetos Esp'])
vobjetosj=lim2(VC.loc[:,'Objetos Jap'])
vlugarese=lim2(VC.loc[:,'Lugares Esp'])
vlugaresj=lim2(VC.loc[:,'Lugares Jap'])
vpersonase=lim2(VC.loc[:,'Personas Esp'])
vpersonasj=lim2(VC.loc[:,'Personas Jap'])
vpronombrese=lim2(VC.loc[:,'Pronombres Esp'])
vpronombresj=lim2(VC.loc[:,'Pronombres Jap'])
vherramientase=lim2(VC.loc[:,'Herramientas Esp'])
vherramientasj=lim2(VC.loc[:,'Herramientas Jap'])
vpreguntase=lim2(VC.loc[:,'Preguntas Esp'])
vpreguntasj=lim2(VC.loc[:,'Preguntas Jap'])
vtiempoe=lim2(VC.loc[:,'Tiempos Esp'])
vtiempoj=lim2(VC.loc[:,'Tiempos Jap'])
vtransportee=lim2(VC.loc[:,'Transporte Esp'])
vtransportej=lim2(VC.loc[:,'Transporte Jap'])
vcomidae=lim2(VC.loc[:,'Comida Esp'])
vcomidaj=lim2(VC.loc[:,'Comida Jap'])
vbebidase=lim2(VC.loc[:,'Bebidas Esp'])
vbebidasj=lim2(VC.loc[:,'Bebidas Jap'])
vactividadese=lim2(VC.loc[:,'Actividades Esp'])
vactividadesj=lim2(VC.loc[:,'Actividades Jap'])
vfrasese=lim2(VC.loc[:,'Frases Esp'])
vfrasesj=lim2(VC.loc[:,'Frases Jap'])

#designar valores de kanji por lecciones
k1e=lim2(K.loc[:,'1 Kan Esp'])
k1j=lim2(K.loc[:,'1 Kan Jap'])
k2e=lim2(K.loc[:,'2 Kan Esp'])
k2j=lim2(K.loc[:,'2 Kan Jap'])
k3e=lim2(K.loc[:,'3 Kan Esp'])
k3j=lim2(K.loc[:,'3 Kan Jap'])
k4e=lim2(K.loc[:,'4 Kan Esp'])
k4j=lim2(K.loc[:,'4 Kan Jap'])
k5e=lim2(K.loc[:,'5 Kan Esp'])
k5j=lim2(K.loc[:,'5 Kan Jap'])
k6e=lim2(K.loc[:,'6 Kan Esp'])
k6j=lim2(K.loc[:,'6 Kan Jap'])
k7e=lim2(K.loc[:,'7 Kan Esp'])
k7j=lim2(K.loc[:,'7 Kan Jap'])
k8e=lim2(K.loc[:,'8 Kan Esp'])
k8j=lim2(K.loc[:,'8 Kan Jap'])
k9e=lim2(K.loc[:,'9 Kan Esp'])
k9j=lim2(K.loc[:,'9 Kan Jap'])
k10e=lim2(K.loc[:,'10 Kan Esp'])
k10j=lim2(K.loc[:,'10 Kan Jap'])
k11e=lim2(K.loc[:,'11 Kan Esp'])
k11j=lim2(K.loc[:,'11 Kan Jap'])
k12e=lim2(K.loc[:,'12 Kan Esp'])
k12j=lim2(K.loc[:,'12 Kan Jap'])
k13e=lim2(K.loc[:,'13 Kan Esp'])
k13j=lim2(K.loc[:,'13 Kan Jap'])
k14e=lim2(K.loc[:,'14 Kan Esp'])
k14j=lim2(K.loc[:,'14 Kan Jap'])
#k15e=lim2(K.loc[:,'15 Kan Esp'])
#k15j=lim2(K.loc[:,'15 Kan Jap'])

def randomLista(l):
  l1=[] 
  for i in range (0,len(l)):
    x=1
    while x==1:
      r=random.randint(0,len(l)-1)
      if l[r] not in l1:
        l1.append(l[r])
        x=0
  return l1

def imprimirUu(l1): #imprimir uno por uno  
  y="1"
  print("1) Duda\n2) Ni idea\n3) Ortografía/ trazos")
  while y=="1":
    ldudas=[]
    lerrores=[]
    ltrazos=[]
    l1=randomLista(l1)
    for i in range (0,len(l1)):
      x=input(str(l1[i])+"\t ")
      if x=="0":
        break  
      elif x=="1":
        ldudas.append(l1[i])
      elif x=="2":
        lerrores.append(l1[i])    
      elif x=="3":
        ltrazos.append(l1[i])    
    print(str(len(ldudas))+" dudas: "+str(ldudas)+"\n"+str(len(lerrores))+" ni idea: "+str(lerrores)+"\n"+str(len(ltrazos))+" ortografía/ trazos: "+str(ltrazos))
    y=input("Presiona 1 para repetir:\n\t")

def relCols(l1,l2):
  z="1"
  while z=="1":  
    rl1=[]  
    p1=[]
    pr=[]
    j=0
    while j<len(l1):
      r1=random.randint(0,len(l1)-1)
      if r1 not in rl1:
        rl1.append(r1)
        p1.append(l1[r1])
        pr.append(l2[r1])
        j+=1
    rl2=[]
    p2=[]
    k=0
    while k<len(l2):
      r2=random.randint(0,len(l2)-1)
      if r2 not in rl2:
        rl2.append(r2)
        p2.append(l2[r2])
        k+=1
    a=0
    b=0
    c=0
    n=0
    errores=[]
    for i in range (0,len(p1)):
      if len(p1[i])>a:
        a=len(p1[i])
      if len(p2[i])>b:
        b=len(p2[i])
      if len(str(i))>c:
        c=len(str(i))
    for i in range (0, len(l1)):
      sa=" "*(a-len(p1[i]))      
      sc=" "*(c-len(str(i+1)))      
      print(str(i+1)+") "+sc+str(p1[i])+sa+"     "+str(i+1)+") "+str(p2[i]))
    for i in range (0,len(l1)):
      resp=input(str(i+1)+") "+str(p1[i])+": \t")
      if resp.isnumeric()==False:
        break
      else:
        resp=int(resp)
      if resp==0:
        break
      elif resp-1<=len(l1):
        if pr[i]==p2[resp-1]:
          n+=1
      else:
        break
    print(str(n)+" correctas")        
    z=input("Presiona 1 para repetir\n\t")

def examenTrad(l1,l2):
  y="1"
  while y=="1":
    errores=[]
    eind=[]
    e=""
    i=0
    rl=[]
    while len(rl)<len(l1):
      r=random.randint(0,len(l1)-1)
      if r not in rl:
        rl.append(r)
    while i<len(rl):
      i+=1
      if i>=len(rl):
        break
      ri=int(rl[i])
      if e=="0":
        break
      while e!=str(l1[ri]):
        e=str(input(str(l2[ri])+": \t")).lower()
        if e=="0":
          break
        elif e=="00" or e=="000" or e==str(l1[ri]):
          if e=="00":
            print(l1[ri])
            rl.append(ri)
            errores.append(e)
            errores.append(l2[ri])
            errores.append(l1[ri])
            if l1[ri] not in eind:
              eind.append(e)
              eind.append(l2[ri])
              eind.append(l1[ri])
          break
        else:
          errores.append(e)
          errores.append(l2[ri])
          errores.append(l1[ri])
          if l1[ri] not in eind:
            eind.append(e)
            eind.append(l2[ri])
            eind.append(l1[ri])
        if i>=len(rl):
          break
        if e=="0":
          break
    print("\n"+str(int(len(errores)/3))+" errores cometidos\nLista de errores:")
    for i in range(0,len(errores),3):
      print(str(int((i/3)+1))+") Pregunta: "+str(errores[i+1])+"\t\t Respuesta correcta: "+str(errores[i+2])+"\t\t Tu respuesta: "+str(errores[i]))
    print("\n"+str(int(len(eind)/3))+" errores individualizados\nLista de errores individualizados:")
    for i in range(0,len(eind),3):
      print(str(int((i/3)+1))+") Pregunta: "+str(eind[i+1])+"\t\t Respuesta correcta: "+str(eind[i+2])+"\t\t Tu respuesta: "+str(eind[i]))    
    y=input("Presiona 1 para repetir:\n\t")

def opMultiple(l1,l2):
  y="1"   
  x="9" 
  while y=="1":
    if x=="0" or x=="":
      break
    i=0
    j=0
    k=0
    nr=[]
    errores=[]
    while i<len(l1) and x!="0" and x!="":
      if x=="0":
        break
      r1=random.randint(0,len(l1)-1)   
      r2=random.randint(0,len(l1)-1)
      r3=random.randint(0,len(l1)-1)
      r4=random.randint(0,len(l1)-1)
      r5=random.randint(0,4)
      r6=random.randint(0,len(l1)-1)
      while r1 in nr:
        r1=random.randint(0,len(l1)-1)
      nr.append(r1) 
      while r2==r1:
        r2=random.randint(0,len(l1)-1)
      while r3==r1 or r3==r2:
        r3=random.randint(0,len(l1)-1)
      while r4==r1 or r4==r3 or r4==r2:
        r4=random.randint(0,len(l1)-1) 
      while r6==r4 or r6==r3 or r6==r2 or r6==r1:
        r6=random.randint(0,len(l1)-1)  
      i+=1
      if r5==0:
        x=input(str(i)+": "+str(l2[r1])+"\n\t1) "+str(l1[r1])+"\n\t2) "+str(l1[r2])+"\n\t3) "+str(l1[r3])+"\n\t4) "+str(l1[r4])+"\n\t5) Ninguna de las anteriores\n\t").lower()
        if x.isnumeric()==False:
          break
        else:
          x=int(x)
        if x==1:
          j+=1
        elif x==0:
          break
        else:
          errores.append(i)
          errores.append(l2[r1])
          errores.append(l1[r1])
          if x==2:
            errores.append(l1[r2])
          elif x==3:
            errores.append(l1[r3])
          elif x==4:
            errores.append(l1[r4])
          elif x==5:
            errores.append("Ninguna de las anteriores")
          else:
            errores.append(x)
      elif r5==1:
        x=input(str(i)+": "+str(l2[r1])+"\n\t1) "+str(l1[r2])+"\n\t2) "+str(l1[r1])+"\n\t3) "+str(l1[r3])+"\n\t4) "+str(l1[r4])+"\n\t5) Ninguna de las anteriores\n\t").lower()
        if x.isnumeric()==False:
          break
        else:
          x=int(x)
        if x==2:
          j+=1
        elif x==0:
          break
        else:
          errores.append(i)
          errores.append(l2[r1])
          errores.append(l1[r1])
          if x==1:
            errores.append(l1[r2])
          elif x==3:
            errores.append(l1[r3])
          elif x==4:
            errores.append(l1[r4])
          elif x==5:
            errores.append("Ninguna de las anteriores")
          else:
            errores.append(x)
      elif r5==2:
        x=input(str(i)+": "+str(l2[r1])+"\n\t1) "+str(l1[r2])+"\n\t2) "+str(l1[r3])+"\n\t3) "+str(l1[r1])+"\n\t4) "+str(l1[r4])+"\n\t5) Ninguna de las anteriores\n\t").lower()
        if x.isnumeric()==False:
          break
        else:
          x=int(x)
        if x==3:
          j+=1
        elif x==0:
          break
        else:
          errores.append(i)
          errores.append(l2[r1])
          errores.append(l1[r1])
          if x==1:
            errores.append(l1[r2])
          elif x==2:
            errores.append(l1[r3])
          elif x==4:
            errores.append(l1[r4])
          elif x==5:
            errores.append("Ninguna de las anteriores")
          else:
            errores.append(x)
      elif r5==3:
        x=input(str(i)+": "+str(l2[r1])+"\n\t1) "+str(l1[r2])+"\n\t2) "+str(l1[r3])+"\n\t3) "+str(l1[r4])+"\n\t4) "+str(l1[r1])+"\n\t5) Ninguna de las anteriores\n\t").lower()
        if x.isnumeric()==False:
          break
        else:
          x=int(x)
        if x==4:
          j+=1
        elif x==0:
          break
        else:
          errores.append(i)
          errores.append(l2[r1])
          errores.append(l1[r1])
          if x==1:
            errores.append(l1[r2])
          elif x==2:
            errores.append(l1[r3])
          elif x==3:
            errores.append(l1[r4])
          elif x==5:
            errores.append("Ninguna de las anteriores")
          else:
            errores.append(x)
      elif r5==4:
        x=input(str(i)+": "+str(l2[r1])+"\n\t1) "+str(l1[r2])+"\n\t2) "+str(l1[r3])+"\n\t3) "+str(l1[r4])+"\n\t4) "+str(l1[r6]+"\n\t5) Ninguna de las anteriores\n\t")).lower()
        if x.isnumeric()==False:
          break
        else:
          x=int(x)
        if x==5:
          j+=1
        elif x==0:
          break
        else:
          errores.append(i)
          errores.append(l2[r1])
          errores.append(l1[r1])
          if x==1:
            errores.append(l1[r2])
          elif x==2:
            errores.append(l1[r3])
          elif x==3:
            errores.append(l1[r4])
          elif x==4:
            errores.append(l1[r6])
          else:
            errores.append(x)
      k+=1  
    if k!=0:      
      print(str(int(len(errores)/4))+" errores\nCalificación: "+str(int(round(j/k,2)*100)))  
      for i in range(0,len(errores),4):
        print(str(int(i/4+1))+") Pregunta "+str(errores[i])+":\t "+str(errores[i+1])+"\n\tRespuesta correcta: "+str(errores[i+2])+"\n\tTu respuesta: "+str(errores[i+3]))
    y=input("Presiona 1 para repetir:\n\t")

def todo():
  l0e=[]
  l0j=[]
  l00e=[]
  l00j=[]
  xvocab=0
  xkanji=0
  xsust=0
  xverbos=0
  xadjs=0
  xoper=0
  xPalabras=0
  xidioma=0
  xmultis=" "
  vk=0
  loper=[1,2,3,4]
  aPalabras=-1
  bPalabras=-1
  lmultis=[]
  vk=int(input("Dame lo que deseas estudiar:\n1) Vocabulario\n2) Kanji\n3) Partículas\n4) Números\n\t"))
  if vk==4:
    while vk!="0":
      rd=random.randint(1,9)
      if rd==1:
        vk=input(random.randint(1,10))
      elif rd==2:
        vk=input(random.randint(10,100))
      elif rd==3:
        vk=input(random.randint(100,1000))
      elif rd==4:
        vk=input(random.randint(1000,10000))
      elif rd==5:
        vk=input(random.randint(10000,100000))
      elif rd==6:
        vk=input(random.randint(100000,1000000))
      elif rd==7:
        vk=input(random.randint(1000000,10000000))
      elif rd==8:
        vk=input(random.randint(10000000,100000000))
  elif vk==1:          
    xvocab=input("Dame la lección de vocabulario: \n1-2-3-4-5-6-7-8-9-10-11-12-13-14-15\na) Categorías\nx) Elegir palabras de múltiples lecciones\ny) Todas las lecciones\nz) Elegir múltiples lecciones\n\t").lower()   
    if xvocab=="z":
      while xmultis!="0" and xmultis!="":
        xmultis=input("Dame la lección de vocabulario: \n1-2-3-4-5-6-7-8-9-10-11-12-13-14-15\n\t")
        if xmultis=="0" or xmultis=="":
          break
        elif xmultis not in lmultis:
          xmultis=int(xmultis)        
          if xmultis==1:
            l0e+=l1e
            l0j+=l1j
          elif xmultis==2:
            l0e+=l2e
            l0j+=l2j
          elif xmultis==3:
            l0e+=l3e
            l0j+=l3j
          elif xmultis==4:
            l0e+=l4e
            l0j+=l4j
          elif xmultis==5:
            l0e+=l5e
            l0j+=l5j
          elif xmultis==6:
            l0e+=l6e
            l0j+=l6j
          elif xmultis==7:
            l0e+=l7e
            l0j+=l7j
          elif xmultis==8:
            l0e+=l8e
            l0j+=l8j
          elif xmultis==9:
            l0e+=l9e
            l0j+=l9j
          elif xmultis==10:
            l0e+=l10e
            l0j+=l10j
          elif xmultis==11:
            l0e+=l11e
            l0j+=l11j
          elif xmultis==12:
            l0e+=l12e
            l0j+=l12j            
          elif xmultis==13:
            l0e+=l13e
            l0j+=l13j
          elif xmultis==14:
            l0e+=l14e
            l0j+=l14j            
          '''elif xmultis==15:
            l0e+=l15e
            l0j+=l15j'''
          lmultis.append(xmultis)
    elif xvocab=="y" or xvocab=="x":#------------todas las lecciones-------------------
      l0e+=l1e
      l0j+=l1j
      l0e+=l2e
      l0j+=l2j
      l0e+=l3e
      l0j+=l3j
      l0e+=l4e
      l0j+=l4j
      l0e+=l5e
      l0j+=l5j
      l0e+=l6e
      l0j+=l6j
      l0e+=l7e
      l0j+=l7j
      l0e+=l8e
      l0j+=l8j
      l0e+=l9e
      l0j+=l9j
      l0e+=l10e
      l0j+=l10j
      l0e+=l11e
      l0j+=l11j
      l0e+=l12e
      l0j+=l12j
      l0e+=l13e
      l0j+=l13j
      l0e+=l14e
      l0j+=l14j
      '''l0e+=l15e
      l0j+=l15j'''
      sinput=1
      if xvocab=="x":
        l00e=[]
        l00j=[]
        count=0
        for i in range (0,len(l0e)):
          print(str(i+1)+") "+str(l0e[i])+"\t"+str(l0j[i]))
        while sinput!=0 or count<5:
          sinput=input("Dame las parejas a agregar: ")
          if sinput.isnumeric()==True:
            sinput=int(sinput)
            if sinput==0:
              if count<5:
                print("Mínimo 5 parejas")
              else:
                break
            elif sinput<=len(l0e) and sinput>0 and l0e[sinput-1] not in l00e:
              l00e.append(l0e[sinput-1])
              l00j.append(l0j[sinput-1])
              count+=1
          else:
            if sinput=="":
              break
            for i in range (0,len(l0e)):
              if sinput==l0e[i] and l0e[i] not in l00e:
                l00e.append(l0e[i])
                l00j.append(l0j[i])
                count+=1
        l0e=l00e
        l0j=l00j
        l00e=[]
        l00j=[]
    elif xvocab=="1":
      l0e=l1e
      l0j=l1j
    elif xvocab=="2":
      l0e=l2e
      l0j=l2j
    elif xvocab=="3":
      l0e=l3e
      l0j=l3j
    elif xvocab=="4":
      l0e=l4e
      l0j=l4j
    elif xvocab=="5":
      l0e=l5e
      l0j=l5j
    elif xvocab=="6":
      l0e=l6e
      l0j=l6j
    elif xvocab=="7":
      l0e=l7e
      l0j=l7j
    elif xvocab=="8":
      l0e=l8e
      l0j=l8j
    elif xvocab=="9":
      l0e=l9e
      l0j=l9j
    elif xvocab=="10":
      l0e=l10e
      l0j=l10j
    elif xvocab=="11":
      l0e=l11e
      l0j=l11j
    elif xvocab=="12":
      l0e=l12e
      l0j=l12j
    elif xvocab=="13":
      l0e=l13e
      l0j=l13j
    elif xvocab=="14":
      l0e=l14e
      l0j=l14j
    #elif xvocab=="15":
      #l0e=l15e
      #l0j=l15j
    #'''
    elif xvocab=="a":
      xcategs=int(input("Dame la categoría:\n1) Sustantivos\n2) Verbos\n3) Adjetivos\n4) Preguntas\n5) Frases\n\t"))
      if xcategs==1:
        xsust=int(input("Dame el tipo:\n1) Todos\n2) Objetos\n3) Lugares\n4) Personas\n5) Pronombres\n6) Transporte\n7) Herramientas\n8) Comida\n9) Bebida\n10) Actividades\n11) Tiempos\n\t"))#sust----------------------------------falta agregar
        if xsust==1:
          l0e=vsustantivose
          l0j=vsustantivosj
        elif xsust==2:
          l0e=vobjetose
          l0j=vobjetosj
        elif xsust==3:
          l0e=vlugarese
          l0j=vlugaresj
        elif xsust==4:
          l0e=vpersonase
          l0j=vpersonasj
        elif xsust==5:
          l0e=vpronombrese
          l0j=vpronombresj
        elif xsust==6:
          l0e=vtransportee
          l0j=vtransportej
        elif xsust==7:
          l0e=vherramientase
          l0j=vherramientasj
        elif xsust==8:
          l0e=vcomidae
          l0j=vcomidaj
        elif xsust==9:
          l0e=vbebidase
          l0j=vbebidasj
        elif xsust==10:
          l0e=vactividadese
          l0j=vactividadesj
        elif xsust==11:
          l0e=vtiempoe
          l0j=vtiempoj
      elif xcategs==2:
        xverbos=int(input("Dame la categoría:\n1) Todos\n\t"))#--------------------verbos----------------------
        if xverbos==1:
          l0e=vverbose
          l0j=vverbosj
      elif xcategs==3:#------------------adjetivos---------------------------------------
        xadjs=int(input("Dame la categoría:\n1) Todos\n2) Adjetivos na\n3) Adjetivos i\n\t"))
        if xadjs==1:
          l0e=vadjetivose
          l0j=vadjetivosj
      elif xcategs==4:#--------------------preguntas-----------------------------
        l0e=vpreguntase
        l0j=vpreguntasj
      elif xcategs==5:
        l0e=vfrasese#---------------------frases---------------------------
        l0j=vfrasesj
  elif vk==2:#-------------------------------kanji-------------------------------------------------    
    xkanji=input("Dame la lección de kanji: \n1-2-3-4-5-6-7-8-9-10-11-12-13-14-15\na) Números\nx) Elegir parejas de múltiples lecciones\ny) Todas las lecciones\nz) Elegir múltiples lecciones\n\t").lower()
    if xkanji=="y" or xkanji=="x":
      l0e+=k1e
      l0j+=k1j
      l0e+=k2e
      l0j+=k2j
      l0e+=k3e
      l0j+=k3j
      l0e+=k4e
      l0j+=k4j
      l0e+=k5e
      l0j+=k5j
      l0e+=k6e
      l0j+=k6j
      l0e+=k7e
      l0j+=k7j
      l0e+=k8e
      l0j+=k8j
      l0e+=k9e
      l0j+=k9j
      l0e+=k10e
      l0j+=k10j      
      l0e+=k11e
      l0j+=k11j
      l0e+=k12e
      l0j+=k12j
      l0e+=k13e
      l0j+=k13j
      l0e+=k14e
      l0j+=k14j
      '''l0e+=k15e
      l0j+=k15j'''
      sinput=1
      if xkanji=="x":
        l00e=[]
        l00j=[]
        count=0
        for i in range (0,len(l0e)):
          print(str(i+1)+") "+str(l0e[i])+"\t"+str(l0j[i]))
        while sinput!=0 or count<5:
          sinput=input("Dame las parejas a agregar: ")
          if sinput.isnumeric()==True:
            sinput=int(sinput)
            if sinput==0:
              if count<5:
                print("Mínimo 5 parejas")
              else:
                break
            elif sinput<=len(l0e) and sinput>0 and l0e[sinput-1] not in l00e:
              l00e.append(l0e[sinput-1])
              l00j.append(l0j[sinput-1])
              count+=1
          else:
            if sinput=="":
              break
            for i in range (0,len(l0e)):
              if sinput==l0e[i] and l0e[i] not in l00e:
                l00e.append(l0e[i])
                l00j.append(l0j[i])
                count+=1
        l0e=l00e
        l0j=l00j
        l00e=[]
        l00j=[]
    elif xkanji=="z":
      while xmultis!="0" and xmultis!="":
        xmultis=input("Dame la lección de kanji: \n1-2-3-4-5-6-7-8-9-10-11-12-13-14-15\n\t")
        if xmultis=="0" or xmultis =="":
          break
        elif xmultis not in lmultis:
          xmultis=int(xmultis)
          if xmultis==1:
            l0e+=k1e
            l0j+=k1j            
          elif xmultis==2:
            l0e+=k2e
            l0j+=k2j            
          elif xmultis==3:
            l0e+=k3e
            l0j+=k3j            
          elif xmultis==4:
            l0e+=k4e
            l0j+=k4j            
          elif xmultis==5:
            l0e+=k5e
            l0j+=k5j            
          elif xmultis==6:
            l0e+=k6e
            l0j+=k6j            
          elif xmultis==7:
            l0e+=k7e
            l0j+=k7j            
          elif xmultis==8:
            l0e+=k8e
            l0j+=k8j            
          elif xmultis==9:
            l0e+=k9e
            l0j+=k9j
          elif xmultis==10:
            l0e+=k10e
            l0j+=k10j            
          elif xmultis==11:
            l0e+=k11e
            l0j+=k11j
          elif xmultis==12:
            l0e+=k12e
            l0j+=k12j            
          elif xmultis==13:
            l0e+=k13e
            l0j+=k13j
          elif xmultis==14:
            l0e+=k14e
            l0j+=k14j            
          '''elif xmultis==15:
            l0e+=k15e
            l0j+=k15j'''
          lmultis.append(xmultis)
    elif xkanji=="1":
      l0e=k1e
      l0j=k1j
    elif xkanji=="2":
      l0e=k2e
      l0j=k2j
    elif xkanji=="3":
      l0e=k3e
      l0j=k3j
    elif xkanji=="4":
      l0e=k4e
      l0j=k4j
    elif xkanji=="5":
      l0e=k5e
      l0j=k5j
    elif xkanji=="6":
      l0e=k6e
      l0j=k6j
    elif xkanji=="7":
      l0e=k7e
      l0j=k7j
    elif xkanji=="8":
      l0e=k8e
      l0j=k8j
    elif xkanji=="9":
      l0e=k9e
      l0j=k9j 
    elif xkanji=="10":
      l0e=k10e
      l0j=k10j    
    elif xkanji=="11":
      l0e=k11e
      l0j=k11j
    elif xkanji=="12":
      l0e=k12e
      l0j=k12j
    elif xkanji=="13":
      l0e=k13e
      l0j=k13j
    elif xkanji=="14":
      l0e=k14e
      l0j=k14j
    '''elif xkanji=="15":
      l0e=k15e
      l0j=k15j
    ''' 
  if l0e!=l00e and l0j!=l00j and len(l0e)>4:
    xPalabras=int(input("Da la cantidad\n1) Rango\n2) Todos\n3) Elegir cuáles\n\t"))
    if xPalabras==1:      
      for i in range(0,len(l0e)):
        print(str(i+1)+") "+str(l0e[i])+"  :  "+str(l0j[i]))
      print("Rango de 5 mínimo")
      while aPalabras<=0 or aPalabras>len(l0e)-4:
        aPalabras=input("Dame el primer número (de pareja): ")
        if aPalabras.isnumeric()==False:
          break
        else:
          aPalabras=int(aPalabras)
        if aPalabras==0:
          break        
      while int(bPalabras)<int(aPalabras)+4 and aPalabras!=0:
        bPalabras=input("Dame el último número (de pareja): ")
        if bPalabras.isnumeric()==False:
          break
        else:
          bPalabras=int(bPalabras)
        if bPalabras==0:
          break
        if bPalabras>len(l0e):
          bPalabras=len(l0e)
      if aPalabras!=0 and bPalabras!=0:
        l0e=l0e[aPalabras-1:bPalabras]
        l0j=l0j[aPalabras-1:bPalabras]
    elif xPalabras==3:
      for i in range (0,len(l0e)):
        print(str(i+1)+") "+str(l0e[i])+"\t"+str(l0j[i]))
      l00e=[]
      l00j=[]
      count=0
      xelegir=1
      while xelegir!=0 or count<5:
        xelegir=input("Dame la pareja a agregar: ")
        if xelegir.isnumeric()==True:
          xelegir=int(xelegir)
          if xelegir==0:
            if count<5:
              print("Mínimo 5 parejas")
            else:
              break
          elif xelegir>0 and xelegir<=len(l0e) and l0e[xelegir-1] not in l00e:
            l00e.append(l0e[xelegir-1])
            l00j.append(l0j[xelegir-1])
            count+=1
        else:
          if xelegir=="":
            xPalabras=0
            break
          for i in range(0,len(l0e)):
            if xelegir==l0e[i] and l0e[i] not in l00e:
              l00e.append(l0e[i])
              l00j.append(l0j[i])
              count+=1
      l0e=l00e
      l0j=l00j
      l00e=l00j=[] 
  if (xPalabras==1 or xPalabras==2 or xPalabras==3) and (aPalabras!=0 and bPalabras!=0):
    xoper=int(input("Da el tipo de ejercicio:\n1) Uno por uno\n2) Relacionar columnas\n3) Examen japonés-> español\n4) Opción múltiple\n\t"))
    if xoper==1:
      xidioma=int(input("1) Palabras en español\n2) Palabras en japonés\n\t"))
      if xidioma==2:
        l0e=l0j
      imprimirUu(randomLista(l0e))
    elif xoper==2:
      relCols(l0e,l0j)
    elif xoper==3:
      examenTrad(l0e,l0j)
    elif xoper==4:
      xidioma=int(input("1) Palabra en japonés, opciones en español\n2) Palabra en español, opciones en japonés\n\t"))
      if xidioma==2:
        opMultiple(l0j,l0e) 
      elif xidioma==1:
        opMultiple(l0e,l0j)

x="1"
while x=="1": 
  todo()
  x=input("1 para reiniciar\n\t")